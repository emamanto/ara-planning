#!/bin/bash

ID=-1
COLOR=none
XDROP=0
YDROP=0
TIME_LIM=5
STEP_SIZE_DEG=15
REBUILD=no
RESET=no
FIRST_SOL=no
ALGO=ara

while getopts ":i:c:x:y:t:s:a:brf" opt; do
case $opt in
    i)
      ID=$OPTARG
      ;;
    c)
      COLOR=$OPTARG
      ;;
    x)
      XDROP=$OPTARG
      ;;
    y)
      YDROP=$OPTARG
      ;;
    t)
      TIME_LIM=$OPTARG
      ;;
    s)
      STEP_SIZE_DEG=$OPTARG
      ;;
    b)
      REBUILD=yes
      ;;
    r)
      RESET=yes
      ;;
    f)
      FIRST_SOL=yes
      ;;
    a)
      ALGO=$OPTARG
      ;;
    \?)
      echo "Invalid flag: -$OPTARG"
      exit
      ;;
    :)
      echo "Flag requires argument: -$OPTARG"
      exit
      ;;
esac
done

if [ $COLOR = none ]; then
    if [ $ID = -1 ]; then
	echo "Target object not specified"
	exit
    fi
else
    if [ $ID != -1 ]; then
	echo "Potentially conflicting object requests"
	exit
    fi
fi


if [ $REBUILD = yes ]; then
    make build_exp
    if [ $? != 0 ]; then
	echo "Compilation error"
	exit
    fi
fi

if [ $RESET = yes ]; then
    if [ $FIRST_SOL = yes ]; then
	bin/experiment -r -f -i "$ID" -c "$COLOR" -x "$XDROP" -y "$YDROP" -t "$TIME_LIM" -s "$STEP_SIZE_DEG" -a "$ALGO"
    else
	bin/experiment -r -i "$ID" -c "$COLOR" -x "$XDROP" -y "$YDROP" -t "$TIME_LIM" -s "$STEP_SIZE_DEG" -a "$ALGO"
    fi
else
    if [ $FIRST_SOL = yes ]; then
	bin/experiment -f -i "$ID" -c "$COLOR" -x "$XDROP" -y "$YDROP" -t "$TIME_LIM" -s "$STEP_SIZE_DEG" -a "$ALGO"
    else
	bin/experiment -i "$ID" -c "$COLOR" -x "$XDROP" -y "$YDROP" -t "$TIME_LIM" -s "$STEP_SIZE_DEG" -a "$ALGO"
    fi
fi

